<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <description>VI SaaS: TenantService</description>

    <groupId>com.vi</groupId>
    <artifactId>tenantservice</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>TenantService</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.12</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <swagger.version>3.0.0</swagger.version>
        <h2.version>2.1.214</h2.version>
        <spring.security>5.7.5</spring.security>
        <owasp.java.html.sanitizer>20211018.1</owasp.java.html.sanitizer>
        <hibernate.validator.version>8.0.0.Final</hibernate.validator.version>
        <liquibase.maven.plugin.version>4.1.1</liquibase.maven.plugin.version>
        <openapi.generator.maven.version>6.2.1</openapi.generator.maven.version>
        <jackson.databind.nullable.version>0.2.3</jackson.databind.nullable.version>
        <springfox.boot.starter.version>3.0.0</springfox.boot.starter.version>
        <keycloak-spring-boot-starter.version>19.0.3</keycloak-spring-boot-starter.version>
        <keycloak-spring-security-adapter.version>16.0.0</keycloak-spring-security-adapter.version>
        <keycloak-admin-client.version>16.0.0</keycloak-admin-client.version>
        <lombok.version>1.18.24</lombok.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <awaitility.version>4.2.0</awaitility.version>
        <awaitility-proxy.version>3.1.6</awaitility-proxy.version>
        <easy-random-core.version>5.0.0</easy-random-core.version>
        <assertj-core.version>3.23.1</assertj-core.version>
        <spring-security-oauth2-test-webmvc-addons.version>3.0.1</spring-security-oauth2-test-webmvc-addons.version>
        <liquibase-core.version>4.9.1</liquibase-core.version>
    </properties>

    <dependencies>
        <!-- Security dependencies -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>${owasp.java.html.sanitizer}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <!-- Persistence -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-maven-plugin</artifactId>
            <version>${liquibase.maven.plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>

        <!-- OpenApi/Swagger dependencies -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>${openapi.generator.maven.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson.databind.nullable.version}</version>
        </dependency>
        <!-- SpringFox: generate YAML file from POJOs and generate documentation -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${springfox.boot.starter.version}</version>
        </dependency>

        <!-- Keycloak dependencies -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-security-adapter</artifactId>
            <version>${keycloak-spring-security-adapter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-starter</artifactId>
            <version>${keycloak-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${keycloak-admin-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <version>${lombok.version}</version>
        </dependency>

        <!-- Apache Commons Lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.3.1</version>
        </dependency>

        <!-- log dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>7.0.1</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>${awaitility-proxy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jeasy</groupId>
            <artifactId>easy-random-core</artifactId>
            <version>${easy-random-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- required only for WebMvc "fluent" API -->
            <groupId>com.c4-soft.springaddons</groupId>
            <artifactId>spring-security-oauth2-test-webmvc-addons</artifactId>
            <version>${spring-security-oauth2-test-webmvc-addons.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.10.9.2</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- OpenApi codegen maven plugin: generates api stubs -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <sourceFolder>/</sourceFolder>
                            </configOptions>
                            <inputSpec>${project.basedir}/api/tenantservice.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${project.groupId}.${project.artifactId}.generated.api.controller</apiPackage>
                            <modelPackage>${project.groupId}.${project.artifactId}.api.model</modelPackage>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <output>target/generated-sources</output>
                            <typeMappings>
                                <typeMapping>OffsetDateTime=LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>consulting-type-service-client-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <sourceFolder>/</sourceFolder>
                                <library>resttemplate</library>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                            <inputSpec>${project.basedir}/services/consultingtypeservice.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <generateApis>true</generateApis>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <apiPackage>
                                ${project.groupId}.${project.artifactId}.consultingtypeservice.generated.web
                            </apiPackage>
                            <modelPackage>
                                ${project.groupId}.${project.artifactId}.consultingtypeservice.generated.web.model
                            </modelPackage>
                            <typeMappings>
                                <typeMapping>
                                    RoleConsultantDTO=${project.groupId}.${project.artifactId}.api.manager.consultingtype.roles.Consultant
                                </typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>application-settings-service-client-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <sourceFolder>/</sourceFolder>
                                <library>resttemplate</library>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                            <inputSpec>${project.basedir}/services/applicationsettingsservice.yml</inputSpec>
                            <generatorName>java</generatorName>
                            <generateApis>true</generateApis>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <apiPackage>
                                ${project.groupId}.${project.artifactId}.applicationsettingsservice.generated.web
                            </apiPackage>
                            <modelPackage>
                                ${project.groupId}.${project.artifactId}.applicationsettingsservice.generated.web.model
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>useradmin-settings-service-client-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <sourceFolder>/</sourceFolder>
                                <library>resttemplate</library>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                            <inputSpec>${project.basedir}/services/useradminservice.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <generateApis>true</generateApis>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <apiPackage>
                                ${project.groupId}.${project.artifactId}.useradminservice.generated.web
                            </apiPackage>
                            <modelPackage>
                                ${project.groupId}.${project.artifactId}.useradminservice.generated.web.model
                            </modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Code style check -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>google_checks_light.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <failsOnError>false</failsOnError>
                            <consoleOutput>true</consoleOutput>
                            <failOnViolation>false</failOnViolation>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <violationSeverity>warning</violationSeverity>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- surefire plugin version managed by Spring Boot -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skipTests>false</skipTests>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skipTests>false</skipTests>
                            <includes>
                                <include>**/*IT.*</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Liquibase Maven plugin -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>4.1.1</version>
                <configuration>
                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.23.0</version>
                <configuration>
                    <java>
                        <toggleOffOn />
                        <googleJavaFormat>
                            <version>1.15.0</version>
                            <style>GOOGLE</style>
                        </googleJavaFormat>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <activeSpringProfile>local</activeSpringProfile>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <activeSpringProfile>dev</activeSpringProfile>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <activeSpringProfile>prod</activeSpringProfile>
            </properties>
        </profile>
    </profiles>

</project>
